/* soapStub.h
   Generated by gSOAP 2.7.10 from ../src/indrisoap.hpp
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_Options
#define SOAP_TYPE_Options (26)
/* Options */
enum Options {HTMLSnippet = 1, TextSnippet = 2};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (13)
/* Base64 schema type: */
struct xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
};
#endif

#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_indrisoap__MetadataPair
#define SOAP_TYPE_indrisoap__MetadataPair (17)
/* indrisoap:MetadataPair */
struct indrisoap__MetadataPair
{
public:
	std::string key;	/* required element of type xsd:string */
	std::string value;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_MetadataPairArray
#define SOAP_TYPE_MetadataPairArray (19)
/* SOAP encoded array of indrisoap:MetadataPair schema type: */
struct MetadataPairArray
{
public:
	struct indrisoap__MetadataPair *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_StringArray
#define SOAP_TYPE_StringArray (21)
/* SOAP encoded array of xsd:string schema type: */
struct StringArray
{
public:
	std::string *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_intArray
#define SOAP_TYPE_intArray (23)
/* SOAP encoded array of xsd:int schema type: */
struct intArray
{
public:
	int *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_indrisoap__QueryRequest
#define SOAP_TYPE_indrisoap__QueryRequest (25)
/* indrisoap:QueryRequest */
struct indrisoap__QueryRequest
{
public:
	std::string query;	/* required element of type xsd:string */
	struct StringArray formulators;	/* required element of type ArrayOfstring */
	struct StringArray metadata;	/* required element of type ArrayOfstring */
	struct intArray docSet;	/* required element of type ArrayOfint */
	int resultsRequested;	/* required element of type xsd:int */
	int startNum;	/* required element of type xsd:int */
	enum Options options;	/* required element of type Options */
};
#endif

#ifndef SOAP_TYPE_indrisoap__Result
#define SOAP_TYPE_indrisoap__Result (27)
/* indrisoap:Result */
struct indrisoap__Result
{
public:
	std::string snippet;	/* required element of type xsd:string */
	std::string documentName;	/* required element of type xsd:string */
	std::string cachedURL;	/* required element of type xsd:string */
	int docid;	/* required element of type xsd:int */
	double score;	/* required element of type xsd:double */
	int begin;	/* required element of type xsd:int */
	int end;	/* required element of type xsd:int */
	struct MetadataPairArray metadata;	/* required element of type ArrayOfMetadataPair */
};
#endif

#ifndef SOAP_TYPE_ResultArray
#define SOAP_TYPE_ResultArray (28)
/* SOAP encoded array of indrisoap:Result schema type: */
struct ResultArray
{
public:
	struct indrisoap__Result *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_indrisoap__QueryResponse
#define SOAP_TYPE_indrisoap__QueryResponse (30)
/* indrisoap:QueryResponse */
struct indrisoap__QueryResponse
{
public:
	float parseTime;	/* required element of type xsd:float */
	float executeTime;	/* required element of type xsd:float */
	float documentsTime;	/* required element of type xsd:float */
	int estimatedMatches;	/* required element of type xsd:int */
	struct ResultArray results;	/* required element of type ArrayOfResult */
};
#endif

#ifndef SOAP_TYPE_indrisoap__doRunQueryResponse
#define SOAP_TYPE_indrisoap__doRunQueryResponse (32)
/* indrisoap:doRunQueryResponse */
struct indrisoap__doRunQueryResponse
{
public:
	struct indrisoap__QueryResponse _return;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type indrisoap:QueryResponse */
};
#endif

#ifndef SOAP_TYPE_indrisoap__doRunQueryRequest
#define SOAP_TYPE_indrisoap__doRunQueryRequest (35)
/* indrisoap:doRunQueryRequest */
struct indrisoap__doRunQueryRequest
{
public:
	struct indrisoap__QueryRequest request;	/* required element of type indrisoap:QueryRequest */
};
#endif

#ifndef SOAP_TYPE_indrisoap__Field
#define SOAP_TYPE_indrisoap__Field (36)
/* indrisoap:Field */
struct indrisoap__Field
{
public:
	std::string name;	/* required element of type xsd:string */
	int begin;	/* required element of type xsd:int */
	int end;	/* required element of type xsd:int */
	LONG64 number;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_FieldArray
#define SOAP_TYPE_FieldArray (38)
/* SOAP encoded array of indrisoap:Field schema type: */
struct FieldArray
{
public:
	struct indrisoap__Field *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_indrisoap__DocumentVector
#define SOAP_TYPE_indrisoap__DocumentVector (40)
/* indrisoap:DocumentVector */
struct indrisoap__DocumentVector
{
public:
	struct StringArray stems;	/* required element of type ArrayOfstring */
	struct intArray positions;	/* required element of type ArrayOfint */
	struct FieldArray fields;	/* required element of type ArrayOfField */
};
#endif

#ifndef SOAP_TYPE_DocumentVectorArray
#define SOAP_TYPE_DocumentVectorArray (41)
/* SOAP encoded array of indrisoap:DocumentVector schema type: */
struct DocumentVectorArray
{
public:
	struct indrisoap__DocumentVector *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_indrisoap__doDocumentVectorsResponse
#define SOAP_TYPE_indrisoap__doDocumentVectorsResponse (45)
/* indrisoap:doDocumentVectorsResponse */
struct indrisoap__doDocumentVectorsResponse
{
public:
	struct DocumentVectorArray response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ArrayOfDocumentVector */
};
#endif

#ifndef SOAP_TYPE_indrisoap__doDocumentVectors
#define SOAP_TYPE_indrisoap__doDocumentVectors (46)
/* indrisoap:doDocumentVectors */
struct indrisoap__doDocumentVectors
{
public:
	struct intArray ids;	/* required element of type ArrayOfint */
};
#endif

#ifndef SOAP_TYPE_indrisoap__doAddDocumentResponse
#define SOAP_TYPE_indrisoap__doAddDocumentResponse (47)
/* indrisoap:doAddDocumentResponse */
struct indrisoap__doAddDocumentResponse
{
public:
	int docid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_indrisoap__doAddDocument
#define SOAP_TYPE_indrisoap__doAddDocument (50)
/* indrisoap:doAddDocument */
struct indrisoap__doAddDocument
{
public:
	char *doc;	/* optional element of type xsd:string */
	char *fileClass;	/* optional element of type xsd:string */
	struct MetadataPairArray meta;	/* required element of type ArrayOfMetadataPair */
};
#endif

#ifndef SOAP_TYPE_indrisoap__doDeleteDocumentResponse
#define SOAP_TYPE_indrisoap__doDeleteDocumentResponse (51)
/* indrisoap:doDeleteDocumentResponse */
struct indrisoap__doDeleteDocumentResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_indrisoap__doDeleteDocument
#define SOAP_TYPE_indrisoap__doDeleteDocument (54)
/* indrisoap:doDeleteDocument */
struct indrisoap__doDeleteDocument
{
public:
	int doc;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (55)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (56)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (58)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (61)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (62)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (7)
typedef char *xsd__string;
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (9)
typedef bool xsd__boolean;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (10)
typedef int xsd__int;
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (12)
typedef double xsd__double;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 indrisoap__doRunQueryRequest(struct soap*, struct indrisoap__QueryRequest request, struct indrisoap__doRunQueryResponse &response);

SOAP_FMAC5 int SOAP_FMAC6 indrisoap__doDocumentVectors(struct soap*, struct intArray ids, struct DocumentVectorArray &response);

SOAP_FMAC5 int SOAP_FMAC6 indrisoap__doAddDocument(struct soap*, char *doc, char *fileClass, struct MetadataPairArray meta, struct indrisoap__doAddDocumentResponse &response);

SOAP_FMAC5 int SOAP_FMAC6 indrisoap__doDeleteDocument(struct soap*, int doc, struct indrisoap__doDeleteDocumentResponse &response);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_indrisoap__doRunQueryRequest(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_indrisoap__doDocumentVectors(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_indrisoap__doAddDocument(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_indrisoap__doDeleteDocument(struct soap*);

#endif

/* End of soapStub.h */
