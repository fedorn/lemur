/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Lemur {

using System;
using System.Runtime.InteropServices;

public class TMatch : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal TMatch(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(TMatch obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        throw new MethodAccessException("C++ destructor does not have public access");
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public int tid {
    set {
      lemur_csharpPINVOKE.TMatch_tid_set(swigCPtr, value);
    } 
    get {
      int ret = lemur_csharpPINVOKE.TMatch_tid_get(swigCPtr);
      return ret;
    } 
  }

  public int start {
    set {
      lemur_csharpPINVOKE.TMatch_start_set(swigCPtr, value);
    } 
    get {
      int ret = lemur_csharpPINVOKE.TMatch_start_get(swigCPtr);
      return ret;
    } 
  }

  public int end {
    set {
      lemur_csharpPINVOKE.TMatch_end_set(swigCPtr, value);
    } 
    get {
      int ret = lemur_csharpPINVOKE.TMatch_end_get(swigCPtr);
      return ret;
    } 
  }

  public int position {
    set {
      lemur_csharpPINVOKE.TMatch_position_set(swigCPtr, value);
    } 
    get {
      int ret = lemur_csharpPINVOKE.TMatch_position_get(swigCPtr);
      return ret;
    } 
  }

}

}
