
0. After checking out the toolkit

1) go to directory "lemur" 
2) type in "configure", which will generate MakeDefns.

1. To make the lemur toolkit

1) go to directory lemur
2) type in "make all" or "make"

2. To clean the lemur toolkit (remove everything but the source)

1) go to directory lemur
2) type in "make clean"

3. To change the toolkit

A. To modify an existing file or add a file to an existing directory:

(1) Make the changes
(2) Go to directory lemur
(3) Type in "make all"

B. To add a new (library) module to the toolkit:

(1) Add the module subdirectory to lemur 
(2) Put all include files in a subdirectory named "include" under the new
    module directory
(3) Put all implementation files in a subdirectory named "src" under
    the new module directory
(4) Add the module directory name to the Makefile in directory lemur or lemurdev.
(5) Copy a Makefile from an existing module directory (e.g, index/src/Makefile)
    to <new-module-dir>/src, and change the first two lines to define this module
    and its dependent modules.

C. To add a new application directory to the toolkit:

(1) Add the application subdirectory to lemur
(2) Put all include files in a subdirectory named "include" under the new
    module directory
(3) Put all implementation files in a subdirectory named "src" under
    the new module directory
(4) Add the application directory name to the Makefile in directory 
      lemur or lemurdev.
(5) Copy a Makefile from an existing application directory (e.g, app/src/Makefile)
    to <new-application-dir>/src, and change the line that defines the dependent modules.


4. To run lemur applications

(1) Create a parameter file with value definitions for all the 
    input variables of an application. Terminate each line with a semicolon. 
	For example, 

    lemur = /usr0/mydata/index.lemur;

   Most applications will display a list of required input variables, 
   if you run it with the "--help" option. 

(2) Do "setenv PARAM YOUR-PARAM-FILENAME" or 
     "export PARAM=YOUR-PARAM-FILENAME", 
      depending on the shell you are running.


(3) Run the application program without any argument.





