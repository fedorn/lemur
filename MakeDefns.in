SHELL = @SHELL@
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE_TARNAME@
pkglibdir = $(libdir)/@PACKAGE_TARNAME@
pkgincludedir = $(includedir)/@PACKAGE_TARNAME@
top_builddir = .

AR = @AR@
CC = @CC@
CXX = @CXX@
LEX = @LEX@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DIR = ${INSTALL} -m 755 -d

MODULES = @MODULES@
PACKAGE = @PACKAGE_TARNAME@
VERSION = @PACKAGE_VERSION@
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)

LEMURLIB = lib$(PACKAGE).a
WITH_DISTRIB = @WITH_DISTRIB@
WITH_SUMMARIZATION = @WITH_SUMMARIZATION@

ALLMODULES=summarization distrib retrieval langmod index utility

# C++ source files
CPPSRC1 = $(notdir $(wildcard ../src/*.cpp))
# C source files
CSRC =  $(notdir $(wildcard ../src/*.c))
# flex source files
FSRC =  $(notdir $(wildcard ../src/*.l))
# Flex objects
FCPP = $(filter-out $(CPPSRC1), $(FSRC:.l=.cpp))
CPPSRC = $(CPPSRC1) $(FCPP)
.SECONDARY: $($(wildcard ../src/*.l).l=.cpp)
# C++ header files
CPPHEADER = $(wildcard ../include/*.hpp)
# C header files
CHEADER = $(wildcard ../include/*.h)
# All header files
ALLHEADER = $(CPPHEADER) $(CHEADER)

# Include path
INCPATH = -I../include $(patsubst %, -I../../%/include, $(MODULES))
ALLINCPATH = -I../include $(patsubst %, -I../../%/include, $(ALLMODULES))

# C++ objects
CPPOBJ = $(CPPSRC:.cpp=.o) 

# C objects
COBJ = $(CSRC:.c=.o)
# all objects
OBJ = $(CPPOBJ) $(COBJ)

# C compiler and compiling options
# C++ compiler and compiling/linking options
CFLAGS = @DEFS@ @CFLAGS@ -shared -fPIC
CXXFLAGS    = @DEFS@ @CXXFLAGS@ -shared -fPIC
CPPLDFLAGS  = @LDFLAGS@  @LIBS@ -lm

ALLBIN = BuildBasicIndex BuildDocMgr BuildKeyfileIncIndex BuildInvertedIndex BuildPropIndex EstimateDirPrior GenL2Norm GenerateQueryModel GenerateSmoothSupport IncIndexer IncPassageIndexer ParseInQueryOp ParseQuery ParseToFile PassageIndexer PushIndexer QueryClarity QueryModelEval RelFBEval RetEval StructQueryEval TwoStageRetEval

ifneq ($(WITH_DISTRIB),0)
ALLBIN += CollSelIndex DistRetEval QryBasedSample
endif

ifneq ($(WITH_SUMMARIZATION),0)
ALLBIN += BasicSummApp MMRSummApp
endif
